// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Express = require("bs-express/src/Express.bs.js");
var Process = require("process");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

function onListen(e) {
  var val;
  try {
    val = e;
  }
  catch (raw_e){
    var e$1 = Caml_js_exceptions.internalToOCamlException(raw_e);
    if (e$1.RE_EXN_ID === Js_exn.$$Error) {
      console.log(e$1._1);
      return Process.exit(1);
    }
    throw e$1;
  }
  console.log("Server listening on port 3000");
  
}

var app = Express.express(undefined);

var server = Express.App.listen(app, 3000, undefined, onListen, undefined);

var jsonObject = Json_encode.object_({
      hd: [
        "title",
        "Pattern"
      ],
      tl: {
        hd: [
          "choices",
          [
            "solid",
            "pinstripe",
            "check"
          ]
        ],
        tl: {
          hd: [
            "totals",
            Json_encode.array((function (prim) {
                    return prim;
                  }), [
                  165,
                  153,
                  82
                ])
          ],
          tl: /* [] */0
        }
      }
    });

Express.App.get(app, "/", Express.Middleware.from(function (param, param$1) {
          var partial_arg = {
            root: "./dist"
          };
          return function (param) {
            return Express.$$Response.sendFile("index.html", partial_arg, param);
          };
        }));

Express.App.get(app, "/json", Express.Middleware.from(function (param, req) {
          return function (param) {
            return Express.$$Response.sendJson(jsonObject, param);
          };
        }));

Express.App.get(app, "/:filename", Express.Middleware.from(function (param, req) {
          var partial_arg = {
            root: "./dist"
          };
          var partial_arg$1 = Json_decode.string(Express.$$Request.params(req)["filename"]);
          return function (param) {
            return Express.$$Response.sendFile(partial_arg$1, partial_arg, param);
          };
        }));

exports.onListen = onListen;
exports.app = app;
exports.server = server;
exports.jsonObject = jsonObject;
/* app Not a pure module */
