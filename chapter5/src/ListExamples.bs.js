// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

var items = {
  hd: 10,
  tl: {
    hd: 11,
    tl: {
      hd: 12,
      tl: {
        hd: 13,
        tl: {
          hd: 14,
          tl: {
            hd: 15,
            tl: {
              hd: 16,
              tl: /* [] */0
            }
          }
        }
      }
    }
  }
};

function sqrtPlusOne(x) {
  return Math.sqrt(x + 1.0);
}

var roots = Belt_List.makeBy(5, sqrtPlusOne);

var added1 = Belt_List.add(items, 9);

var added2 = {
  hd: 9,
  tl: items
};

var more = {
  hd: 17,
  tl: {
    hd: 18,
    tl: {
      hd: 19,
      tl: /* [] */0
    }
  }
};

var joined = Belt_List.concat(items, more);

var taken3 = Belt_List.take(items, 3);

var dropped3 = Belt_List.drop(items, 3);

var badTake = Belt_List.take(items, 10);

var result = Belt_List.splitAt(items, 3);

if (result !== undefined) {
  console.log(result[0]);
  console.log(result[1]);
} else {
  console.log("None");
}

var optElement = Belt_List.get(items, 3);

var badOptElement = Belt_List.get(items, 10);

var element = Belt_List.getExn(items, 3);

var badElement;

try {
  badElement = Belt_List.getExn(items, 10);
}
catch (raw_e){
  var e = Caml_js_exceptions.internalToOCamlException(raw_e);
  if (e.RE_EXN_ID === Js_exn.$$Error) {
    var message = e._1.message;
    if (message !== undefined) {
      console.log("Error: " + message);
    } else {
      console.log("An unkown error occurred");
    }
    badElement = -1;
  } else {
    throw e;
  }
}

exports.items = items;
exports.sqrtPlusOne = sqrtPlusOne;
exports.roots = roots;
exports.added1 = added1;
exports.added2 = added2;
exports.more = more;
exports.joined = joined;
exports.taken3 = taken3;
exports.dropped3 = dropped3;
exports.badTake = badTake;
exports.result = result;
exports.optElement = optElement;
exports.badOptElement = badOptElement;
exports.element = element;
exports.badElement = badElement;
/* roots Not a pure module */
